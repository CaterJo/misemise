{"ast":null,"code":"import _classCallCheck from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/src/component/App/App.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Map from '../map/map';\nimport 'tui-grid/dist/tui-grid.css';\nimport Grid from '@toast-ui/react-grid';\nimport { bindActionCreators } from 'redux';\nimport { getDataAsync } from '../../store/modules';\nvar columns = [{\n  name: 'id',\n  title: '지역'\n}, {\n  name: 'name',\n  title: '수치'\n}, {\n  name: 'etc',\n  title: '단계'\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data;\n      var gridData = [];\n\n      var getLevel = function getLevel(_num) {\n        _num = parseInt(_num, 10);\n        var container = [];\n        container.push({\n          min: 0,\n          max: 15,\n          level: '좋음'\n        });\n        container.push({\n          min: 16,\n          max: 35,\n          level: '보통'\n        });\n        container.push({\n          min: 36,\n          max: 75,\n          level: '나쁨'\n        });\n        container.push({\n          min: 76,\n          max: 999,\n          level: '매우나쁨'\n        });\n        return container.filter(function (info) {\n          var condition = info.min <= _num && _num <= info.max;\n          return condition;\n        })[0];\n      };\n\n      if (data.geoData) {\n        data.geoData.forEach(function (i) {\n          gridData.push({\n            id: i.properties.LOC_KOR_NM,\n            name: i.properties.AIR_LV,\n            etc: getLevel(i.properties.AIR_LV).level\n          });\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(Map, {\n        ncpClientId: process.env.REACT_APP_SERVICEKEY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        data: gridData,\n        columns: columns,\n        rowHeight: 25,\n        bodyHeight: 100,\n        virtualScrolling: true,\n        heightResizable: false,\n        rowHeaders: ['rowNum'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n};\n\nvar maDispatchToPrope = function maDispatchToPrope(dispatch) {\n  return {\n    getDataAsync: bindActionCreators(getDataAsync, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, maDispatchToPrope)(App);","map":{"version":3,"sources":["/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/src/component/App/App.jsx"],"names":["React","Component","connect","Map","Grid","bindActionCreators","getDataAsync","columns","name","title","App","props","state","data","gridData","getLevel","_num","parseInt","container","push","min","max","level","filter","info","condition","geoData","forEach","i","id","properties","LOC_KOR_NM","AIR_LV","etc","process","env","REACT_APP_SERVICEKEY","mapStateToProps","maDispatchToPrope","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Map from '../map/map'\nimport 'tui-grid/dist/tui-grid.css'\nimport Grid from '@toast-ui/react-grid'\nimport { bindActionCreators } from 'redux'\nimport { getDataAsync } from '../../store/modules'\n\nconst columns = [\n  { name: 'id', title: '지역' },\n  { name: 'name', title: '수치' },\n  { name: 'etc', title: '단계' }\n]\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  render () {\n    const { data } = this.props\n\n    const gridData = []\n\n    let getLevel = (_num) => {\n      _num = parseInt(_num, 10)\n\n      let container = []\n      container.push({ min: 0, max: 15, level: '좋음' })\n      container.push({ min: 16, max: 35, level: '보통' })\n      container.push({ min: 36, max: 75, level: '나쁨' })\n      container.push({ min: 76, max: 999, level: '매우나쁨' })\n\n      return container.filter((info) => {\n        let condition = info.min <= _num && _num <= info.max\n        return condition\n      })[0]\n    }\n\n    if (data.geoData) {\n      data.geoData.forEach(i => {\n        gridData.push({ id: i.properties.LOC_KOR_NM, name: i.properties.AIR_LV, etc: getLevel(i.properties.AIR_LV).level })\n      })\n    }\n\n    return (\n      <>\n        <Map ncpClientId={process.env.REACT_APP_SERVICEKEY}/>\n        <Grid\n          data={gridData}\n          columns={columns}\n          rowHeight={25}\n          bodyHeight={100}\n          virtualScrolling={true}\n          heightResizable={false}\n          rowHeaders={['rowNum']}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.data\n})\n\nconst maDispatchToPrope = (dispatch) => ({\n  getDataAsync: bindActionCreators(getDataAsync, dispatch)\n})\n\nexport default connect(mapStateToProps, maDispatchToPrope)(App)\n"]},"metadata":{},"sourceType":"module"}