{"ast":null,"code":"import _classCallCheck from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/src/component/App/App.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Map from '../map/map';\nimport 'tui-grid/dist/tui-grid.css';\nimport Grid from '@toast-ui/react-grid';\nimport { bindActionCreators } from 'redux';\nimport { getDataAsync } from '../../store/modules';\nvar columns = [{\n  name: 'id',\n  title: '지역'\n}, {\n  name: 'name',\n  title: '수치'\n}, {\n  name: 'etc',\n  title: '단계'\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getLevel\",\n    value: function getLevel(_num) {\n      _num = parseInt(_num, 10);\n      return container.reduce(function (acc, cur) {\n        return cur.min <= _num ? cur.level : acc;\n      }, '');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.props.data;\n      var gridData = [];\n\n      if (data.geoData) {\n        data.geoData.forEach(function (i) {\n          gridData.push({\n            id: i.properties.LOC_KOR_NM,\n            name: i.properties.AIR_LV,\n            etc: _this2.getLevel(i.properties.AIR_LV)\n          });\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(Map, {\n        ncpClientId: process.env.REACT_APP_SERVICEKEY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        data: gridData,\n        columns: columns,\n        rowHeight: 25,\n        bodyHeight: 100,\n        virtualScrolling: true,\n        heightResizable: false,\n        rowHeaders: ['rowNum'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n};\n\nvar maDispatchToPrope = function maDispatchToPrope(dispatch) {\n  return {\n    getDataAsync: bindActionCreators(getDataAsync, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, maDispatchToPrope)(App);","map":{"version":3,"sources":["/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/src/component/App/App.jsx"],"names":["React","Component","connect","Map","Grid","bindActionCreators","getDataAsync","columns","name","title","App","props","state","_num","parseInt","container","reduce","acc","cur","min","level","data","gridData","geoData","forEach","i","push","id","properties","LOC_KOR_NM","AIR_LV","etc","getLevel","process","env","REACT_APP_SERVICEKEY","mapStateToProps","maDispatchToPrope","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAO,4BAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,IAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,KAAK,EAAE;AAArB,CADc,EAEd;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFc,EAGd;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHc,CAAhB;;IAMMC,G;;;;;AACJ,eAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa,EAAb;AAHkB;AAInB;;;;6BAESC,I,EAAM;AACdA,MAAAA,IAAI,GAAGC,QAAQ,CAACD,IAAD,EAAO,EAAP,CAAf;AACA,aAAOE,SAAS,CAACC,MAAV,CAAiB,UAACC,GAAD,EAAMC,GAAN;AAAA,eAAcA,GAAG,CAACC,GAAJ,IAAWN,IAAX,GAAkBK,GAAG,CAACE,KAAtB,GAA8BH,GAA5C;AAAA,OAAjB,EAAkE,EAAlE,CAAP;AACD;;;6BAES;AAAA;;AAAA,UACAI,IADA,GACS,KAAKV,KADd,CACAU,IADA;AAGR,UAAMC,QAAQ,GAAG,EAAjB;;AAEA,UAAID,IAAI,CAACE,OAAT,EAAkB;AAChBF,QAAAA,IAAI,CAACE,OAAL,CAAaC,OAAb,CAAqB,UAAAC,CAAC,EAAI;AACxBH,UAAAA,QAAQ,CAACI,IAAT,CAAc;AAAEC,YAAAA,EAAE,EAAEF,CAAC,CAACG,UAAF,CAAaC,UAAnB;AAA+BrB,YAAAA,IAAI,EAAEiB,CAAC,CAACG,UAAF,CAAaE,MAAlD;AAA0DC,YAAAA,GAAG,EAAE,MAAI,CAACC,QAAL,CAAcP,CAAC,CAACG,UAAF,CAAaE,MAA3B;AAA/D,WAAd;AACD,SAFD;AAGD;;AAED,aACE,0CACE,oBAAC,GAAD;AAAK,QAAA,WAAW,EAAEG,OAAO,CAACC,GAAR,CAAYC,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAEb,QADR;AAEE,QAAA,OAAO,EAAEf,OAFX;AAGE,QAAA,SAAS,EAAE,EAHb;AAIE,QAAA,UAAU,EAAE,GAJd;AAKE,QAAA,gBAAgB,EAAE,IALpB;AAME,QAAA,eAAe,EAAE,KANnB;AAOE,QAAA,UAAU,EAAE,CAAC,QAAD,CAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAcD;;;;EArCeN,S;;AAwClB,IAAMmC,eAAe,GAAG,SAAlBA,eAAkB,CAACxB,KAAD;AAAA,SAAY;AAClCS,IAAAA,IAAI,EAAET,KAAK,CAACS;AADsB,GAAZ;AAAA,CAAxB;;AAIA,IAAMgB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD;AAAA,SAAe;AACvChC,IAAAA,YAAY,EAAED,kBAAkB,CAACC,YAAD,EAAegC,QAAf;AADO,GAAf;AAAA,CAA1B;;AAIA,eAAepC,OAAO,CAACkC,eAAD,EAAkBC,iBAAlB,CAAP,CAA4C3B,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Map from '../map/map'\nimport 'tui-grid/dist/tui-grid.css'\nimport Grid from '@toast-ui/react-grid'\nimport { bindActionCreators } from 'redux'\nimport { getDataAsync } from '../../store/modules'\n\nconst columns = [\n  { name: 'id', title: '지역' },\n  { name: 'name', title: '수치' },\n  { name: 'etc', title: '단계' }\n]\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  getLevel (_num) {\n    _num = parseInt(_num, 10)\n    return container.reduce((acc, cur) => cur.min <= _num ? cur.level : acc, '')\n  }\n\n  render () {\n    const { data } = this.props\n\n    const gridData = []\n\n    if (data.geoData) {\n      data.geoData.forEach(i => {\n        gridData.push({ id: i.properties.LOC_KOR_NM, name: i.properties.AIR_LV, etc: this.getLevel(i.properties.AIR_LV) })\n      })\n    }\n\n    return (\n      <>\n        <Map ncpClientId={process.env.REACT_APP_SERVICEKEY}/>\n        <Grid\n          data={gridData}\n          columns={columns}\n          rowHeight={25}\n          bodyHeight={100}\n          virtualScrolling={true}\n          heightResizable={false}\n          rowHeaders={['rowNum']}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.data\n})\n\nconst maDispatchToPrope = (dispatch) => ({\n  getDataAsync: bindActionCreators(getDataAsync, dispatch)\n})\n\nexport default connect(mapStateToProps, maDispatchToPrope)(App)\n"]},"metadata":{},"sourceType":"module"}