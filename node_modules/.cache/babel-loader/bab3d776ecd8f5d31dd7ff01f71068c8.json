{"ast":null,"code":"import _objectSpread from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/src/component/map/map.jsx\";\nimport React, { Component } from 'react';\nimport loadScriptPromise from './loadNavermapsScript';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getDataAsync } from '../../modules';\nimport * as adaptor from '../../util/adaptor';\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this));\n    _this.map = React.createRef(); // redux에서 관리할 값과 구분.\n\n    _this.state = {\n      miseList: []\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          ncpClientId = _this$props.ncpClientId,\n          getDataAsync = _this$props.getDataAsync,\n          _lat = _this$props._lat,\n          _lng = _this$props._lng,\n          zoomLevel = _this$props.zoomLevel;\n      var that = this;\n      loadScriptPromise(ncpClientId).then(function (naver) {\n        var zoomRange = [2, 4, 6];\n        var maxZoom = zoomRange[zoomRange.length - 1];\n        var minZoom = zoomRange[0]; // 전국 : 2, 시군구 :4  읍면동 : 7\n        // naver.maps. PointBounds 경계 생성.\n        // 인터렉션 옵션.\n\n        var mapOptions = {\n          logoControl: false,\n          mapDataControl: false,\n          scaleControl: false,\n          center: new naver.maps.LatLng(_lat, _lng),\n          // 충주\n          draggable: false,\n          scrollWheel: false,\n          keyboardShortcuts: false,\n          disableDoubleTapZoom: true,\n          disableDoubleClickZoom: true,\n          disableTwoFingerTapZoom: true,\n          zoom: zoomLevel,\n          // baseTileOpacity: 0.5,\n          maxZoom: maxZoom,\n          minZoom: minZoom\n        };\n        var map = new naver.maps.Map('map', mapOptions);\n\n        _this2.setState(function (prevState) {\n          return _objectSpread({}, prevState, {\n            newMap: map,\n            parentCd: []\n          });\n        });\n\n        map.data.setStyle(function (feature) {\n          //geoJSON 지명을 넣고 해당하는 미세먼지 데이터 수치가 나온다.\n          debubber;\n          var airNm = adaptor[feature.property_CTPRVN_CD].AIR_NM;\n          var airData = that.props.data.airData;\n          var airLv = airData[airNm];\n\n          var getLevel = function getLevel(_num) {\n            _num = parseInt(_num, 10);\n            var container = [];\n            container.push({\n              min: 0,\n              max: 15,\n              level: '좋음'\n            });\n            container.push({\n              min: 16,\n              max: 35,\n              level: '보통'\n            });\n            container.push({\n              min: 36,\n              max: 75,\n              level: '나쁨'\n            });\n            container.push({\n              min: 76,\n              max: 999,\n              level: '매우나쁨'\n            });\n            return container.filter(function (info) {\n              var condition = info.min <= _num && _num <= info.max;\n              return condition;\n            })[0];\n          };\n\n          var styleOptions = {\n            fillOpacity: 0.6,\n            fillColor: '#ff0000',\n            strokeColor: '#ff0000',\n            strokeWeight: 2,\n            strokeOpacity: 0.5\n          };\n          var lvKor = getLevel(airLv).level;\n\n          switch (lvKor) {\n            case \"좋음\":\n              //#\n              styleOptions.fillColor = '#117cf6';\n              break;\n\n            case \"보통\":\n              //\n              styleOptions.fillColor = '#50af32';\n              break;\n\n            case \"나쁨\":\n              //\n              styleOptions.fillColor = '#c4b341';\n              break;\n\n            case \"매우나쁨\":\n              //\n              styleOptions.fillColor = '#d36f36';\n              break;\n          } // if (feature.getProperty('focus')) {\n          //   styleOptions.fillOpacity = 0.6\n          //   styleOptions.fillColor = '#0f0'\n          //   styleOptions.strokeColor = '#0f0'\n          //   styleOptions.strokeWeight = 4\n          //   styleOptions.strokeOpacity = 1\n          // }\n\n\n          return styleOptions;\n        });\n        map.data.addListener('mouseover', function (e) {\n          map.data.overrideStyle(e.feature, {\n            strokeWeight: 8\n          });\n          map.data.addListener('mouseout', function (e) {\n            map.data.revertStyle();\n          });\n        }); // zoom UP\n\n        map.data.addListener('click', function (e) {\n          var feature = e.feature; // let isFocused = feature.getProperty('focus')\n          // feature.setProperty('focus', !isFocused)\n\n          var _feature$bounds$getCe = feature.bounds.getCenter(),\n              x = _feature$bounds$getCe.x,\n              y = _feature$bounds$getCe.y;\n\n          var _lat = y;\n          var _lng = x;\n          var currentZoom = map.getZoom();\n\n          if (maxZoom > currentZoom) {\n            //geoJSON 요청\n            var parentCd = currentZoom === 2 ? feature.property_CTPRVN_CD : currentZoom === 4 ? feature.property_SIG_CD : parentCd;\n            var tempArr = that.state.parentCd.slice();\n            tempArr.push(parentCd);\n            that.setState({\n              'parentCd': tempArr\n            });\n\n            var _zoomLevel = zoomRange[zoomRange.indexOf(currentZoom) + 1] || currentZoom;\n\n            map.setZoom(_zoomLevel);\n            map.setCenter(new naver.maps.LatLng(_lat, _lng));\n            getDataAsync({\n              _lat: _lat,\n              _lng: _lng,\n              zoomLevel: _zoomLevel,\n              naver: naver,\n              map: map,\n              parentCd: parentCd,\n              feature: feature\n            });\n          }\n        }); // zoom Down\n\n        map.data.addListener('rightclick', function (e) {\n          // console.log('우클릭',e.latlng);\n          var _e$feature$bounds$get = e.feature.bounds.getCenter(),\n              x = _e$feature$bounds$get.x,\n              y = _e$feature$bounds$get.y;\n\n          var _lat = y;\n          var _lng = x;\n          var currentZoom = map.getZoom();\n\n          if (minZoom < currentZoom) {\n            var nextIdx = zoomRange.indexOf(currentZoom) - 1;\n\n            var _zoomLevel2 = zoomRange[nextIdx] || currentZoom;\n\n            map.setZoom(_zoomLevel2);\n            map.setCenter(new naver.maps.LatLng(_lat, _lng));\n            var parentCd = that.state.parentCd.shift();\n            getDataAsync({\n              _lat: _lat,\n              _lng: _lng,\n              zoomLevel: _zoomLevel2,\n              naver: naver,\n              map: map,\n              parentCd: parentCd\n            });\n          }\n        });\n        return getDataAsync({\n          _lat: _lat,\n          _lng: _lng,\n          zoomLevel: zoomLevel,\n          naver: naver,\n          map: map\n        });\n      }).catch(function (ex) {\n        console.error(ex);\n      }); //END _promise\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var data = this.props.data;\n\n      if (data.geoData) {\n        console.log('data_Init========='); // 데이터 초기화\n\n        var allFeature = this.state.newMap.data.getAllFeature();\n\n        if (allFeature.length > 0) {\n          while (allFeature.length > 0) {\n            var item = allFeature[0];\n            this.state.newMap.data.removeFeature(item);\n          }\n        }\n\n        data.geoData.forEach(function (element) {\n          _this3.state.newMap.data.addGeoJson(element);\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        id: \"map\",\n        style: {\n          width: '100%',\n          height: 600 + 'px'\n        },\n        ref: this.map,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    mapObj: state.mapObj,\n    _lat: state.lat,\n    _lng: state.lng,\n    zoomLevel: state.zoomLevel,\n    data: state.data\n  };\n};\n\nvar maDispatchToPrope = function maDispatchToPrope(dispatch) {\n  return {\n    getDataAsync: bindActionCreators(getDataAsync, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, maDispatchToPrope)(Map);","map":{"version":3,"sources":["/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/src/component/map/map.jsx"],"names":["React","Component","loadScriptPromise","bindActionCreators","connect","getDataAsync","adaptor","Map","map","createRef","state","miseList","props","ncpClientId","_lat","_lng","zoomLevel","that","then","naver","zoomRange","maxZoom","length","minZoom","mapOptions","logoControl","mapDataControl","scaleControl","center","maps","LatLng","draggable","scrollWheel","keyboardShortcuts","disableDoubleTapZoom","disableDoubleClickZoom","disableTwoFingerTapZoom","zoom","setState","prevState","newMap","parentCd","data","setStyle","feature","debubber","airNm","property_CTPRVN_CD","AIR_NM","airData","airLv","getLevel","_num","parseInt","container","push","min","max","level","filter","info","condition","styleOptions","fillOpacity","fillColor","strokeColor","strokeWeight","strokeOpacity","lvKor","addListener","e","overrideStyle","revertStyle","bounds","getCenter","x","y","currentZoom","getZoom","property_SIG_CD","tempArr","slice","indexOf","setZoom","setCenter","nextIdx","shift","catch","ex","console","error","geoData","log","allFeature","getAllFeature","item","removeFeature","forEach","element","addGeoJson","width","height","mapStateToProps","mapObj","lat","lng","maDispatchToPrope","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport loadScriptPromise from './loadNavermapsScript'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getDataAsync } from '../../modules'\nimport * as adaptor from   '../../util/adaptor'\n\n\n\nclass Map extends Component {\n  constructor () {\n    super()\n    this.map = React.createRef()\n\n    // redux에서 관리할 값과 구분.\n    this.state = {\n      miseList: []\n    }\n  }\n\n\n  componentDidMount () {\n    const { ncpClientId, getDataAsync, _lat, _lng, zoomLevel } = this.props\n    const that = this\n\n    loadScriptPromise(ncpClientId).then(  (naver) => {\n      let zoomRange = [2, 4, 6]\n      let maxZoom = zoomRange[zoomRange.length - 1]\n      let minZoom = zoomRange[0]\n\n      // 전국 : 2, 시군구 :4  읍면동 : 7\n      // naver.maps. PointBounds 경계 생성.\n      // 인터렉션 옵션.\n      const mapOptions = {\n        logoControl: false,\n        mapDataControl: false,\n        scaleControl: false,\n        center: new naver.maps.LatLng(_lat, _lng), // 충주\n        draggable: false,\n        scrollWheel: false,\n        keyboardShortcuts: false,\n        disableDoubleTapZoom: true,\n        disableDoubleClickZoom: true,\n        disableTwoFingerTapZoom: true,\n        zoom: zoomLevel,\n        // baseTileOpacity: 0.5,\n        maxZoom: maxZoom,\n        minZoom: minZoom\n      }\n      let map = new naver.maps.Map('map', mapOptions)\n\n      this.setState((prevState) => {\n        return ({\n          ...prevState,\n          newMap: map,\n          parentCd: []\n        })\n      })\n\n      map.data.setStyle(function (feature) {\n\n        //geoJSON 지명을 넣고 해당하는 미세먼지 데이터 수치가 나온다.\n        debubber;\n        let airNm = adaptor[feature.property_CTPRVN_CD].AIR_NM\n\n        let airData = that.props.data.airData;\n        let airLv = airData[airNm]\n        \n        let getLevel = (_num) => {\n          _num = parseInt(_num, 10)\n    \n          let container = []\n          container.push({ min: 0, max: 15, level: '좋음' })\n          container.push({ min: 16, max: 35, level: '보통' })\n          container.push({ min: 36, max: 75, level: '나쁨' })\n          container.push({ min: 76, max: 999, level: '매우나쁨' })\n    \n          return container.filter((info) => {\n            let condition = info.min <= _num && _num <= info.max\n            return condition\n          })[0]\n        }\n\n\n\n        var styleOptions = {\n          fillOpacity: 0.6,\n          fillColor: '#ff0000',\n          strokeColor: '#ff0000',\n          strokeWeight: 2,\n          strokeOpacity: 0.5\n        }\n\n        let lvKor = getLevel(airLv).level;\n          switch(lvKor){\n            case \"좋음\"://#\n                styleOptions.fillColor = '#117cf6'\n              break;\n            case \"보통\"://\n                styleOptions.fillColor = '#50af32'\n              break;\n            case \"나쁨\"://\n                styleOptions.fillColor = '#c4b341'\n              break;\n            case \"매우나쁨\": //\n                styleOptions.fillColor = '#d36f36'\n              break;\n          }\n\n\n        // if (feature.getProperty('focus')) {\n        //   styleOptions.fillOpacity = 0.6\n        //   styleOptions.fillColor = '#0f0'\n        //   styleOptions.strokeColor = '#0f0'\n        //   styleOptions.strokeWeight = 4\n        //   styleOptions.strokeOpacity = 1\n        // }\n\n        return styleOptions\n      })\n\n      map.data.addListener('mouseover', function (e) {\n        map.data.overrideStyle(e.feature, {\n          strokeWeight: 8\n        })\n\n      map.data.addListener('mouseout', function (e) {\n        map.data.revertStyle()\n      })\n    })\n      \n\n      // zoom UP\n      map.data.addListener('click', function (e) {\n        let feature = e.feature\n        // let isFocused = feature.getProperty('focus')\n        // feature.setProperty('focus', !isFocused)\n\n        let { x, y } = feature.bounds.getCenter()\n        let _lat = y\n        let _lng = x\n\n        let currentZoom = map.getZoom()\n        if (maxZoom > currentZoom) {\n          //geoJSON 요청\n          let parentCd = currentZoom === 2 ? feature.property_CTPRVN_CD\n            : currentZoom === 4 ? feature.property_SIG_CD\n              : parentCd\n\n          let tempArr = that.state.parentCd.slice()\n          tempArr.push(parentCd)\n          that.setState({ 'parentCd': tempArr })\n          let zoomLevel = zoomRange[zoomRange.indexOf(currentZoom) + 1] || currentZoom\n          map.setZoom(zoomLevel)\n          map.setCenter(new naver.maps.LatLng(_lat, _lng))\n          getDataAsync({ _lat, _lng, zoomLevel, naver, map, parentCd,feature })\n        }\n      })\n\n      // zoom Down\n      map.data.addListener('rightclick', (e) => {\n        // console.log('우클릭',e.latlng);\n        let { x, y } = e.feature.bounds.getCenter()\n        let _lat = y\n        let _lng = x\n\n        let currentZoom = map.getZoom()\n        if (minZoom < currentZoom) {\n          let nextIdx = zoomRange.indexOf(currentZoom) - 1\n          let zoomLevel = zoomRange[nextIdx] || currentZoom\n          map.setZoom(zoomLevel)\n          map.setCenter(new naver.maps.LatLng(_lat, _lng))\n\n          let parentCd = that.state.parentCd.shift()\n          getDataAsync({ _lat, _lng, zoomLevel, naver, map, parentCd })\n        }\n      })\n\n      return getDataAsync({ _lat, _lng, zoomLevel, naver, map })\n    }).catch((ex) => {\n      console.error(ex)\n    })//END _promise\n  }\n\n\n  render () {\n    const { data } = this.props\n    \n    if (data.geoData) {\n      console.log('data_Init=========');\n      // 데이터 초기화\n      let allFeature = this.state.newMap.data.getAllFeature()\n\n      if (allFeature.length > 0) {\n        while (allFeature.length > 0) {\n          let item = allFeature[0]\n          this.state.newMap.data.removeFeature(item)\n        }\n      }\n      \n      data.geoData.forEach(element => {\n        this.state.newMap.data.addGeoJson(element)\n      })\n    }\n  \n    return (\n      <>\n        <div id=\"map\" style={{ width: '100%', height: 600 + 'px' }} ref={this.map}></div>\n        {/* {JSON.stringify(data)} */}\n      </>\n    )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  mapObj: state.mapObj,\n  _lat: state.lat,\n  _lng: state.lng,\n  zoomLevel: state.zoomLevel,\n  data: state.data\n})\n\nconst maDispatchToPrope = (dispatch) => ({\n  getDataAsync: bindActionCreators(getDataAsync, dispatch)\n})\n\nexport default connect(mapStateToProps, maDispatchToPrope)(Map)\n"]},"metadata":{},"sourceType":"module"}