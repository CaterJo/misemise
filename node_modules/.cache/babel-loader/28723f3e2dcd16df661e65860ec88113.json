{"ast":null,"code":"import _defineProperty from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { handleActions, createAction } from 'redux-actions';\nimport axios from 'axios';\n\nvar getMiseDate = function getMiseDate(otp) {\n  console.log('getMiose', otp);\n\n  if (otp.zoomLevel === 4) {}\n\n  return axios.request({\n    method: 'GET',\n    url: \"http://localhost:8080?zoomLevel=\".concat(otp.zoomLevel, \"&sidoName=\").concat(otp.sidoName, \"&stationName=\").concat(otp.stationName, \"&parentCd=\").concat(otp.parentCd)\n  });\n}; // 한글 주소로 변환한다.\n\n\nvar converLatLngToAddr = function converLatLngToAddr(otp) {\n  var naver = otp.naver,\n      _lat = otp._lat,\n      _lng = otp._lng;\n  return new Promise(function (resolve) {\n    naver.maps.Service.reverseGeocode({\n      location: new naver.maps.LatLng(_lat, _lng)\n    }, function (status, response) {\n      if (status === naver.maps.Service.Status.OK) {\n        var addr = response.result.items[0];\n        resolve(addr);\n      }\n    });\n  });\n}; // Action\n\n\nvar GET_MISE_DATA = 'GET_MISE_DATA'; // React에서 호출하는 부분\n\nexport var getData = createAction(GET_MISE_DATA);\nexport var getDataAsync = function getDataAsync(otp) {\n  return function (dispatch) {\n    // 주소변환.\n    converLatLngToAddr(otp).then(function (rtn) {\n      return getMiseDate(_objectSpread({}, otp, {\n        addr: rtn\n      }));\n    }).then(function (rtn) {\n      // 요청이 성공했을경우, 서버 응답내용을 payload 로 설정하여 GET_POST_SUCCESS 액션을 디스패치합니다.\n      dispatch({\n        type: GET_MISE_DATA,\n        payload: _objectSpread({}, rtn, otp)\n      });\n    }).catch(function (error) {\n      // 에러가 발생했을 경우, 에로 내용을 payload 로 설정하여 GET_POST_FAILURE 액션을 디스패치합니다.\n      dispatch({\n        type: GET_MISE_DATA,\n        payload: _objectSpread({}, error, otp)\n      });\n    });\n  };\n}; // 행정구역의 레벨. (줌 레벨)\n// 중앙 : 충주.\n\nvar counterInitialState = {\n  data: {},\n  mapObj: {},\n  zoomLevel: 2,\n  lat: 36.9257913,\n  lng: 127.87798 // 리듀서.\n\n};\nexport default handleActions(_defineProperty({}, GET_MISE_DATA, function (state, action) {\n  var _action$payload = action.payload,\n      data = _action$payload.data,\n      _lat = _action$payload._lat,\n      _lng = _action$payload._lng,\n      map = _action$payload.map;\n  return _objectSpread({}, state, {\n    'zoomLevel': state.nextZoom,\n    'mapObj': map,\n    'lat': _lat,\n    'lng': _lng,\n    'data': data\n  });\n}), counterInitialState);","map":{"version":3,"sources":["/Users/byeonggyu/Desktop/etc/200.dev/10.project/misemise/src/modules/index.js"],"names":["handleActions","createAction","axios","getMiseDate","otp","console","log","zoomLevel","request","method","url","sidoName","stationName","parentCd","converLatLngToAddr","naver","_lat","_lng","Promise","resolve","maps","Service","reverseGeocode","location","LatLng","status","response","Status","OK","addr","result","items","GET_MISE_DATA","getData","getDataAsync","dispatch","then","rtn","type","payload","catch","error","counterInitialState","data","mapObj","lat","lng","state","action","map","nextZoom"],"mappings":"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","sourcesContent":["import { handleActions, createAction } from 'redux-actions'\nimport axios from 'axios'\n\nconst getMiseDate = (otp) => {\n  console.log('getMiose', otp)\n\n  if(otp.zoomLevel === 4){\n    \n  }\n\n\n  return axios.request({\n    method: 'GET',\n    url: `http://localhost:8080?zoomLevel=${otp.zoomLevel}&sidoName=${otp.sidoName}&stationName=${otp.stationName}&parentCd=${otp.parentCd}`\n  })\n}\n\n// 한글 주소로 변환한다.\nconst converLatLngToAddr = (otp) => {\n  const { naver, _lat, _lng } = otp\n\n  return new Promise((resolve) => {\n    naver.maps.Service.reverseGeocode({ location: new naver.maps.LatLng(_lat, _lng) }, (status, response) => {\n      if (status === naver.maps.Service.Status.OK) {\n        let addr = response.result.items[0]\n        resolve(addr)\n      }\n    })\n  })\n}\n\n// Action\nconst GET_MISE_DATA = 'GET_MISE_DATA'\n\n// React에서 호출하는 부분\nexport const getData = createAction(GET_MISE_DATA)\n\nexport const getDataAsync = (otp) => dispatch => {\n  // 주소변환.\n  converLatLngToAddr(otp).then(rtn => {\n    return getMiseDate({ ...otp, addr: rtn })\n  }).then(rtn => {\n    // 요청이 성공했을경우, 서버 응답내용을 payload 로 설정하여 GET_POST_SUCCESS 액션을 디스패치합니다.\n\n    dispatch({\n      type: GET_MISE_DATA,\n      payload: { ...rtn, ...otp }\n    })\n  }).catch(error => {\n    // 에러가 발생했을 경우, 에로 내용을 payload 로 설정하여 GET_POST_FAILURE 액션을 디스패치합니다.\n    dispatch({\n      type: GET_MISE_DATA,\n      payload: { ...error, ...otp }\n    })\n  })\n}\n\n// 행정구역의 레벨. (줌 레벨)\n// 중앙 : 충주.\nconst counterInitialState = {\n  data: {},\n  mapObj: {},\n  zoomLevel: 2,\n  lat: 36.9257913,\n  lng: 127.87798\n}\n\n// 리듀서.\nexport default handleActions({\n  [GET_MISE_DATA]: (state, action) => {\n    const { data, _lat, _lng, map } = action.payload\n\n    return {\n      ...state,\n      'zoomLevel': state.nextZoom,\n      'mapObj': map,\n      'lat': _lat,\n      'lng': _lng,\n      'data': data\n    }\n  }\n}, counterInitialState)\n"]},"metadata":{},"sourceType":"module"}