{"ast":null,"code":"import _objectSpread from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/byeonggyu/Desktop/etc/project/misemise/src/component/map/map.jsx\";\nimport React, { Component } from 'react';\nimport loadScriptPromise from './loadNavermapsScript';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getDataAsync } from '../../modules';\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this));\n    _this.map = React.createRef(); // redux에서 관리할 값과 구분.\n\n    _this.state = {\n      miseList: []\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          ncpClientId = _this$props.ncpClientId,\n          getDataAsync = _this$props.getDataAsync,\n          _lat = _this$props._lat,\n          _lng = _this$props._lng,\n          zoomLevel = _this$props.zoomLevel;\n      loadScriptPromise(ncpClientId).then(function (naver) {\n        var zoomRange = [2, 4, 6];\n        var maxZoom = zoomRange[zoomRange.length - 1];\n        var minZoom = zoomRange[0]; // 전국 : 2, 시군구 :4  읍면동 : 7\n        // naver.maps. PointBounds 경계 생성.\n        // 인터렉션 옵션.\n\n        var mapOptions = {\n          logoControl: false,\n          mapDataControl: false,\n          scaleControl: false,\n          center: new naver.maps.LatLng(_lat, _lng),\n          // 충주\n          draggable: false,\n          scrollWheel: false,\n          keyboardShortcuts: false,\n          disableDoubleTapZoom: true,\n          disableDoubleClickZoom: true,\n          disableTwoFingerTapZoom: true,\n          zoom: zoomLevel,\n          // baseTileOpacity: 0.5,\n          maxZoom: maxZoom,\n          minZoom: minZoom\n        };\n        var map = new naver.maps.Map('map', mapOptions);\n\n        _this2.setState(function (prevState) {\n          return _objectSpread({}, prevState, {\n            newMap: map,\n            parentCd: []\n          });\n        });\n\n        var that = _this2;\n        map.data.setStyle(function (feature) {\n          var styleOptions = {\n            fillOpacity: 0.0,\n            fillColor: '#ff0000',\n            strokeColor: '#ff0000',\n            strokeWeight: 2,\n            strokeOpacity: 0.5\n          };\n\n          if (feature.getProperty('focus')) {\n            styleOptions.fillOpacity = 0.6;\n            styleOptions.fillColor = '#0f0';\n            styleOptions.strokeColor = '#0f0';\n            styleOptions.strokeWeight = 4;\n            styleOptions.strokeOpacity = 1;\n          }\n\n          return styleOptions;\n        });\n        map.data.addListener('mouseover', function (e) {\n          map.data.overrideStyle(e.feature, {\n            strokeWeight: 8\n          });\n          map.data.addListener('mouseout', function (e) {\n            map.data.revertStyle();\n          });\n        }); // zoom UP\n\n        map.data.addListener('click', function (e) {\n          var feature = e.feature; // let isFocused = feature.getProperty('focus')\n          // feature.setProperty('focus', !isFocused)\n\n          var _e$feature$bounds$get = e.feature.bounds.getCenter(),\n              x = _e$feature$bounds$get.x,\n              y = _e$feature$bounds$get.y;\n\n          var _lat = y;\n          var _lng = x;\n          var currentZoom = map.getZoom();\n\n          if (maxZoom > currentZoom) {\n            var parentCd = currentZoom === 2 ? feature.property_CTPRVN_CD : currentZoom === 4 ? feature.property_SIG_CD : parentCd;\n            var tempArr = that.state.parentCd.slice();\n            tempArr.push(parentCd);\n            that.setState({\n              'parentCd': tempArr\n            });\n\n            var _zoomLevel = zoomRange[zoomRange.indexOf(currentZoom) + 1] || currentZoom;\n\n            map.setZoom(_zoomLevel);\n            map.setCenter(new naver.maps.LatLng(_lat, _lng));\n            getDataAsync({\n              _lat: _lat,\n              _lng: _lng,\n              zoomLevel: _zoomLevel,\n              naver: naver,\n              map: map,\n              parentCd: parentCd\n            });\n          }\n        }); // zoom Down\n\n        map.data.addListener('rightclick', function (e) {\n          // console.log('우클릭',e.latlng);\n          var _e$feature$bounds$get2 = e.feature.bounds.getCenter(),\n              x = _e$feature$bounds$get2.x,\n              y = _e$feature$bounds$get2.y;\n\n          var _lat = y;\n          var _lng = x;\n          var currentZoom = map.getZoom();\n\n          if (minZoom < currentZoom) {\n            var nextIdx = zoomRange.indexOf(currentZoom) - 1;\n\n            var _zoomLevel2 = zoomRange[nextIdx] || currentZoom;\n\n            map.setZoom(_zoomLevel2);\n            map.setCenter(new naver.maps.LatLng(_lat, _lng));\n            var parentCd = that.state.parentCd.shift();\n            getDataAsync({\n              _lat: _lat,\n              _lng: _lng,\n              zoomLevel: _zoomLevel2,\n              naver: naver,\n              map: map,\n              parentCd: parentCd\n            });\n          }\n        });\n        return getDataAsync({\n          _lat: _lat,\n          _lng: _lng,\n          zoomLevel: zoomLevel,\n          naver: naver,\n          map: map\n        });\n      }).catch(function (ex) {\n        console.error(ex);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var data = this.props.data;\n      debugger;\n\n      if (data.geoData) {\n        // 데이터 초기화\n        var allFeature = this.state.newMap.data.getAllFeature();\n\n        if (allFeature.length > 0) {\n          while (allFeature.length > 0) {\n            var item = allFeature[0];\n            this.state.newMap.data.removeFeature(item);\n          }\n        }\n\n        data.geoData.forEach(function (element) {\n          _this3.state.newMap.data.addGeoJson(element);\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        id: \"map\",\n        style: {\n          width: '100%',\n          height: 600 + 'px'\n        },\n        ref: this.map,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    mapObj: state.mapObj,\n    _lat: state.lat,\n    _lng: state.lng,\n    zoomLevel: state.zoomLevel,\n    data: state.data\n  };\n};\n\nvar maDispatchToPrope = function maDispatchToPrope(dispatch) {\n  return {\n    getDataAsync: bindActionCreators(getDataAsync, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, maDispatchToPrope)(Map);","map":{"version":3,"sources":["/Users/byeonggyu/Desktop/etc/project/misemise/src/component/map/map.jsx"],"names":["React","Component","loadScriptPromise","bindActionCreators","connect","getDataAsync","Map","map","createRef","state","miseList","props","ncpClientId","_lat","_lng","zoomLevel","then","naver","zoomRange","maxZoom","length","minZoom","mapOptions","logoControl","mapDataControl","scaleControl","center","maps","LatLng","draggable","scrollWheel","keyboardShortcuts","disableDoubleTapZoom","disableDoubleClickZoom","disableTwoFingerTapZoom","zoom","setState","prevState","newMap","parentCd","that","data","setStyle","feature","styleOptions","fillOpacity","fillColor","strokeColor","strokeWeight","strokeOpacity","getProperty","addListener","e","overrideStyle","revertStyle","bounds","getCenter","x","y","currentZoom","getZoom","property_CTPRVN_CD","property_SIG_CD","tempArr","slice","push","indexOf","setZoom","setCenter","nextIdx","shift","catch","ex","console","error","geoData","allFeature","getAllFeature","item","removeFeature","forEach","element","addGeoJson","width","height","mapStateToProps","mapObj","lat","lng","maDispatchToPrope","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport loadScriptPromise from './loadNavermapsScript'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getDataAsync } from '../../modules'\n\n\n\nclass Map extends Component {\n  constructor () {\n    super()\n    this.map = React.createRef()\n\n    // redux에서 관리할 값과 구분.\n    this.state = {\n      miseList: []\n    }\n  }\n\n  componentDidMount () {\n    const { ncpClientId, getDataAsync, _lat, _lng, zoomLevel } = this.props\n\n    loadScriptPromise(ncpClientId).then((naver) => {\n      let zoomRange = [2, 4, 6]\n      let maxZoom = zoomRange[zoomRange.length - 1]\n      let minZoom = zoomRange[0]\n\n      // 전국 : 2, 시군구 :4  읍면동 : 7\n      // naver.maps. PointBounds 경계 생성.\n      // 인터렉션 옵션.\n      const mapOptions = {\n        logoControl: false,\n        mapDataControl: false,\n        scaleControl: false,\n        center: new naver.maps.LatLng(_lat, _lng), // 충주\n        draggable: false,\n        scrollWheel: false,\n        keyboardShortcuts: false,\n        disableDoubleTapZoom: true,\n        disableDoubleClickZoom: true,\n        disableTwoFingerTapZoom: true,\n        zoom: zoomLevel,\n        // baseTileOpacity: 0.5,\n        maxZoom: maxZoom,\n        minZoom: minZoom\n      }\n      let map = new naver.maps.Map('map', mapOptions)\n\n      this.setState((prevState) => {\n        return ({\n          ...prevState,\n          newMap: map,\n          parentCd: []\n        })\n      })\n      let that = this\n\n      map.data.setStyle(function (feature) {\n        var styleOptions = {\n          fillOpacity: 0.0,\n          fillColor: '#ff0000',\n          strokeColor: '#ff0000',\n          strokeWeight: 2,\n          strokeOpacity: 0.5\n        }\n\n        if (feature.getProperty('focus')) {\n          styleOptions.fillOpacity = 0.6\n          styleOptions.fillColor = '#0f0'\n          styleOptions.strokeColor = '#0f0'\n          styleOptions.strokeWeight = 4\n          styleOptions.strokeOpacity = 1\n        }\n\n        return styleOptions\n      })\n\n      map.data.addListener('mouseover', function (e) {\n        map.data.overrideStyle(e.feature, {\n          strokeWeight: 8\n        })\n\n        map.data.addListener('mouseout', function (e) {\n          map.data.revertStyle()\n        })\n      })\n\n      // zoom UP\n      map.data.addListener('click', function (e) {\n        let feature = e.feature\n        // let isFocused = feature.getProperty('focus')\n        // feature.setProperty('focus', !isFocused)\n\n        let { x, y } = e.feature.bounds.getCenter()\n        let _lat = y\n        let _lng = x\n\n        let currentZoom = map.getZoom()\n        if (maxZoom > currentZoom) {\n          let parentCd = currentZoom === 2 ? feature.property_CTPRVN_CD\n            : currentZoom === 4 ? feature.property_SIG_CD\n              : parentCd\n\n          let tempArr = that.state.parentCd.slice()\n          tempArr.push(parentCd)\n          that.setState({ 'parentCd': tempArr })\n          let zoomLevel = zoomRange[zoomRange.indexOf(currentZoom) + 1] || currentZoom\n          map.setZoom(zoomLevel)\n          map.setCenter(new naver.maps.LatLng(_lat, _lng))\n          getDataAsync({ _lat, _lng, zoomLevel, naver, map, parentCd })\n        }\n      })\n\n      // zoom Down\n      map.data.addListener('rightclick', (e) => {\n        // console.log('우클릭',e.latlng);\n        let { x, y } = e.feature.bounds.getCenter()\n        let _lat = y\n        let _lng = x\n\n        let currentZoom = map.getZoom()\n        if (minZoom < currentZoom) {\n          let nextIdx = zoomRange.indexOf(currentZoom) - 1\n          let zoomLevel = zoomRange[nextIdx] || currentZoom\n          map.setZoom(zoomLevel)\n          map.setCenter(new naver.maps.LatLng(_lat, _lng))\n\n          let parentCd = that.state.parentCd.shift()\n          getDataAsync({ _lat, _lng, zoomLevel, naver, map, parentCd })\n        }\n      })\n\n      return getDataAsync({ _lat, _lng, zoomLevel, naver, map })\n    }).catch((ex) => {\n      console.error(ex)\n    })\n  }\n\n  render () {\n    const { data } = this.props\n    debugger; \n    if (data.geoData) {\n      // 데이터 초기화\n      let allFeature = this.state.newMap.data.getAllFeature()\n\n      if (allFeature.length > 0) {\n        while (allFeature.length > 0) {\n          let item = allFeature[0]\n          this.state.newMap.data.removeFeature(item)\n        }\n      }\n      data.geoData.forEach(element => {\n        this.state.newMap.data.addGeoJson(element)\n      })\n    }\n    return (\n      <>\n        <div id=\"map\" style={{ width: '100%', height: 600 + 'px' }} ref={this.map}></div>\n        {/* {JSON.stringify(data)} */}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  mapObj: state.mapObj,\n  _lat: state.lat,\n  _lng: state.lng,\n  zoomLevel: state.zoomLevel,\n  data: state.data\n})\n\nconst maDispatchToPrope = (dispatch) => ({\n  getDataAsync: bindActionCreators(getDataAsync, dispatch)\n})\n\nexport default connect(mapStateToProps, maDispatchToPrope)(Map)\n"]},"metadata":{},"sourceType":"module"}