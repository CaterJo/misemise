{"ast":null,"code":"import _classCallCheck from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/byeonggyu/Desktop/etc/project/misemise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/byeonggyu/Desktop/etc/project/misemise/src/component/map/map.jsx\";\nimport React, { Component } from 'react';\nimport loadScriptPromise from './loadNavermapsScript';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getDataAsync } from '../../modules';\nimport { sig } from '../../util/adaptor';\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this));\n    _this.map = React.createRef(); // redux에서 관리할 값과 구분.\n\n    _this.state = {\n      miseList: []\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.props.data;\n\n      if (data.geoData) {\n        console.log('data_Init========='); // 데이터 초기화\n\n        var allFeature = this.state.newMap.data.getAllFeature();\n\n        if (allFeature.length > 0) {\n          while (allFeature.length > 0) {\n            var item = allFeature[0];\n            this.state.newMap.data.removeFeature(item);\n          }\n        }\n\n        data.geoData.forEach(function (element) {\n          _this2.state.newMap.data.addGeoJson(element);\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        id: \"map\",\n        style: {\n          width: '100%',\n          height: 600 + 'px'\n        },\n        ref: this.map,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    mapObj: state.mapObj,\n    _lat: state.lat,\n    _lng: state.lng,\n    zoomLevel: state.zoomLevel,\n    data: state.data\n  };\n};\n\nvar maDispatchToPrope = function maDispatchToPrope(dispatch) {\n  return {\n    getDataAsync: bindActionCreators(getDataAsync, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, maDispatchToPrope)(Map);","map":{"version":3,"sources":["/Users/byeonggyu/Desktop/etc/project/misemise/src/component/map/map.jsx"],"names":["React","Component","loadScriptPromise","bindActionCreators","connect","getDataAsync","sig","Map","map","createRef","state","miseList","data","props","geoData","console","log","allFeature","newMap","getAllFeature","length","item","removeFeature","forEach","element","addGeoJson","width","height","mapStateToProps","mapObj","_lat","lat","_lng","lng","zoomLevel","maDispatchToPrope","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAAQC,GAAR,QAAoB,oBAApB;;IAIMC,G;;;;;AACJ,iBAAe;AAAA;;AAAA;;AACb;AACA,UAAKC,GAAL,GAAWR,KAAK,CAACS,SAAN,EAAX,CAFa,CAIb;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AALa;AAQd;;;;6BAES;AAAA;;AAAA,UACAC,IADA,GACS,KAAKC,KADd,CACAD,IADA;;AAGR,UAAIA,IAAI,CAACE,OAAT,EAAkB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADgB,CAEhB;;AACA,YAAIC,UAAU,GAAG,KAAKP,KAAL,CAAWQ,MAAX,CAAkBN,IAAlB,CAAuBO,aAAvB,EAAjB;;AAEA,YAAIF,UAAU,CAACG,MAAX,GAAoB,CAAxB,EAA2B;AACzB,iBAAOH,UAAU,CAACG,MAAX,GAAoB,CAA3B,EAA8B;AAC5B,gBAAIC,IAAI,GAAGJ,UAAU,CAAC,CAAD,CAArB;AACA,iBAAKP,KAAL,CAAWQ,MAAX,CAAkBN,IAAlB,CAAuBU,aAAvB,CAAqCD,IAArC;AACD;AACF;;AAEDT,QAAAA,IAAI,CAACE,OAAL,CAAaS,OAAb,CAAqB,UAAAC,OAAO,EAAI;AAC9B,UAAA,MAAI,CAACd,KAAL,CAAWQ,MAAX,CAAkBN,IAAlB,CAAuBa,UAAvB,CAAkCD,OAAlC;AACD,SAFD;AAGD;;AAED,aACE,0CACE;AAAK,QAAA,EAAE,EAAC,KAAR;AAAc,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,MAAM;AAA/B,SAArB;AAA4D,QAAA,GAAG,EAAE,KAAKnB,GAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAMC;;;;EArCaP,S;;AAwClB,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAAClB,KAAD;AAAA,SAAY;AAClCmB,IAAAA,MAAM,EAAEnB,KAAK,CAACmB,MADoB;AAElCC,IAAAA,IAAI,EAAEpB,KAAK,CAACqB,GAFsB;AAGlCC,IAAAA,IAAI,EAAEtB,KAAK,CAACuB,GAHsB;AAIlCC,IAAAA,SAAS,EAAExB,KAAK,CAACwB,SAJiB;AAKlCtB,IAAAA,IAAI,EAAEF,KAAK,CAACE;AALsB,GAAZ;AAAA,CAAxB;;AAQA,IAAMuB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD;AAAA,SAAe;AACvC/B,IAAAA,YAAY,EAAEF,kBAAkB,CAACE,YAAD,EAAe+B,QAAf;AADO,GAAf;AAAA,CAA1B;;AAIA,eAAehC,OAAO,CAACwB,eAAD,EAAkBO,iBAAlB,CAAP,CAA4C5B,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport loadScriptPromise from './loadNavermapsScript'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getDataAsync } from '../../modules'\nimport {sig} from   '../../util/adaptor'\n\n\n\nclass Map extends Component {\n  constructor () {\n    super()\n    this.map = React.createRef()\n\n    // redux에서 관리할 값과 구분.\n    this.state = {\n      miseList: []\n    }\n  }\n\n  render () {\n    const { data } = this.props\n    \n    if (data.geoData) {\n      console.log('data_Init=========');\n      // 데이터 초기화\n      let allFeature = this.state.newMap.data.getAllFeature()\n\n      if (allFeature.length > 0) {\n        while (allFeature.length > 0) {\n          let item = allFeature[0]\n          this.state.newMap.data.removeFeature(item)\n        }\n      }\n      \n      data.geoData.forEach(element => {\n        this.state.newMap.data.addGeoJson(element)\n      })\n    }\n  \n    return (\n      <>\n        <div id=\"map\" style={{ width: '100%', height: 600 + 'px' }} ref={this.map}></div>\n        {/* {JSON.stringify(data)} */}\n      </>\n    )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  mapObj: state.mapObj,\n  _lat: state.lat,\n  _lng: state.lng,\n  zoomLevel: state.zoomLevel,\n  data: state.data\n})\n\nconst maDispatchToPrope = (dispatch) => ({\n  getDataAsync: bindActionCreators(getDataAsync, dispatch)\n})\n\nexport default connect(mapStateToProps, maDispatchToPrope)(Map)\n"]},"metadata":{},"sourceType":"module"}